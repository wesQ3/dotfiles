#!/usr/bin/perl

use 5.28.0; use warnings;
$|++;
use Net::Ping;

my $host = shift @ARGV or die 'host is required';
my $sleep_time = 30;
my $p = Net::Ping->new;

say "watching host $host";

my $state = 'initial';
my $when_changed = time;
while (1) {
   my $res = $p->ping($host) ? 'up' : 'down';

   if ($state ne $res) {
      my $elapsed = time - $when_changed;
      my $say_time = format_time($elapsed);
      say "$host is $res, was $state for $say_time";
      $state = $res;
      $when_changed = time;
   }

   sleep $sleep_time;
}

sub format_time {
   my $elapsed = shift;
   my ($days, $hours, $minutes) = map {int $_} (
      $elapsed/(24*60*60),
      $elapsed/(60*60),
      $elapsed/(60),
   );
   return sprintf '%d sec (~%d days)', $elapsed, $days if $days;
   return sprintf '%d sec (~%d hours)', $elapsed, $hours if $hours;
   return sprintf '%d sec (~%d minutes)', $elapsed, $minutes if $minutes;
   return "$elapsed sec";
}
